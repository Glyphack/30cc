name: c
  VarDecl(c):
    Type(TKN_CHAR)
name: a
  VarDecl(a):
    Type(TKN_INT**[10][110][30])
name: b
  VarDecl(b):
    Type(TKN_CHAR)
name: c
  VarDecl(c):
    Type(TKN_INT)
name: salam
  VarDecl(salam):
    Type(TKN_INT)
name: i2
  VarDecl(i2):
    Type(TKN_INT)
name: a
  VarDecl(a):
    Type(TKN_INT)
name: b
  VarDecl(b):
    Type(TKN_INT)
name: c
  VarDecl(c):
    Type(TKN_INT)
name: d
  VarDecl(d):
    Type(TKN_INT)
name: cc
  VarDecl(cc):
    Type(TKN_INT*)
name: i
  VarDecl(i):
    Type(TKN_INT)
section .data
__printf_size: equ 16
__doub_size: equ 32
__temp_str_2 db `Fact: %u\n`, 0
__fact_size: equ 80
__fibo_size: equ 96
__temp_str_5 db `I: %u\n`, 0
__temp_str_6 db `%c %c %u`, 0
__temp_str_7 db `\n`, 0
__temp_str_8 db `Result: %u\n`, 0
__temp_str_9 db `Addr of a: %u\n`, 0
__temp_str_10 db `Value of b: %u\n`, 0
__temp_str_11 db `Addr of c: %u\n`, 0
__temp_str_12 db `Double of 123: %u\n`, 0
__temp_str_13 db `Factorial 5: %u\n`, 0
__temp_str_14 db `TRUE\n`, 0
__temp_str_15 db `FALSE\n`, 0
__temp_str_16 db `TRUE\n`, 0
__temp_str_17 db `FALSE\n`, 0
__temp_str_18 db `%u\n`, 0
__temp_str_19 db `%u `, 0
__temp_str_20 db `%u `, 0
__temp_str_21 db `%u `, 0
__temp_str_22 db `%u `, 0
__temp_str_23 db `%u `, 0
__temp_str_24 db `%u `, 0
__temp_str_25 db `%u `, 0
__temp_str_26 db `%u `, 0
__temp_str_27 db `%u\n`, 0
__temp_str_28 db `%u `, 0
__temp_str_29 db `\nDONE!\n`, 0
__temp_str_30 db `%u\n`, 0
__main_size: equ 1040
section .text
extern printf
global doub
doub:
push rbp
mov rbp, rsp
sub rsp, __doub_size
mov [rsp+0], rdi
mov rax, [rsp + 0]
mov rbx, 2
mul rbx
mov [rsp + 8], rax
mov rax, [rsp + 8]
mov rsp, rbp
pop rbp
ret
mov rsp, rbp
pop rbp
ret
global fact
fact:
push rbp
mov rbp, rsp
sub rsp, __fact_size
mov [rsp+0], rdi
mov rax, __temp_str_2
mov [rsp + 8], rax
mov rax, [rsp + 0]
mov [rsp + 16], rax
mov rdi, [rsp + 8]
mov rsi, [rsp + 16]
call printf
mov [rsp + 24], rax
mov rax, 0
cmp rax, [rsp + 0]
je __tmp_label_0
mov rax, [rsp + 0]
mov rbx, 1
sub rax, rbx
mov [rsp + 32], rax
mov rax, [rsp + 32]
mov [rsp + 40], rax
mov rdi, [rsp + 40]
call fact
mov [rsp + 48], rax
mov rax, [rsp + 0]
mov rbx, [rsp + 48]
mul rbx
mov [rsp + 56], rax
mov rax, [rsp + 56]
mov rsp, rbp
pop rbp
ret
jmp __tmp_label_1
__tmp_label_0:
mov rax, 1
mov rsp, rbp
pop rbp
ret
__tmp_label_1:
mov rsp, rbp
pop rbp
ret
global fibo
fibo:
push rbp
mov rbp, rsp
sub rsp, __fibo_size
mov [rsp+0], rdi
mov rax, [rsp + 0]
mov rbx, 0
cmp rax, rbx
je __tmp_label_2
mov rax, 0
jmp __tmp_label_3
__tmp_label_2:
mov rax, 1
__tmp_label_3:
mov [rsp + 8], rax
mov rax, 0
cmp rax, [rsp + 8]
je __tmp_label_4
mov rax, 1
mov rsp, rbp
pop rbp
ret
jmp __tmp_label_5
__tmp_label_4:
mov rax, [rsp + 0]
mov rbx, 1
cmp rax, rbx
je __tmp_label_6
mov rax, 0
jmp __tmp_label_7
__tmp_label_6:
mov rax, 1
__tmp_label_7:
mov [rsp + 16], rax
mov rax, 0
cmp rax, [rsp + 16]
je __tmp_label_8
mov rax, 1
mov rsp, rbp
pop rbp
ret
jmp __tmp_label_9
__tmp_label_8:
mov rax, [rsp + 0]
mov rbx, 1
sub rax, rbx
mov [rsp + 24], rax
mov rax, [rsp + 24]
mov [rsp + 32], rax
mov rdi, [rsp + 32]
call fibo
mov [rsp + 40], rax
mov rax, [rsp + 0]
mov rbx, 2
sub rax, rbx
mov [rsp + 48], rax
mov rax, [rsp + 48]
mov [rsp + 56], rax
mov rdi, [rsp + 56]
call fibo
mov [rsp + 64], rax
mov rax, [rsp + 40]
mov rbx, [rsp + 64]
add rax, rbx
mov [rsp + 72], rax
mov rax, [rsp + 72]
mov rsp, rbp
pop rbp
ret
__tmp_label_9:
__tmp_label_5:
mov rsp, rbp
pop rbp
ret
global main
main:
push rbp
mov rbp, rsp
sub rsp, __main_size
mov rax, 0
mov [rsp+0], rax
__tmp_label_10:
mov rax, [rsp + 0]
mov rbx, 10
cmp rax, rbx
jl __tmp_label_12
mov rax, 0
jmp __tmp_label_13
__tmp_label_12:
mov rax, 1
__tmp_label_13:
mov [rsp + 8], rax
mov rax, [rsp + 8]
cmp rax, 0
je __tmp_label_11
mov rax, __temp_str_5
mov [rsp + 16], rax
mov rax, [rsp + 0]
mov [rsp + 24], rax
mov rdi, [rsp + 16]
mov rsi, [rsp + 24]
call printf
mov [rsp + 32], rax
mov rax, [rsp + 0]
mov rbx, 1
add rax, rbx
mov [rsp + 40], rax
mov rax, [rsp + 40]
mov [rsp+0], rax
jmp __tmp_label_10
__tmp_label_11:
mov rax, __temp_str_6
mov [rsp + 16], rax
mov rax, 97
mov [rsp + 24], rax
mov rax, 110
mov [rsp + 32], rax
mov rax, 99
mov [rsp + 40], rax
mov rdi, [rsp + 16]
mov rsi, [rsp + 24]
mov rdx, [rsp + 32]
mov rcx, [rsp + 40]
call printf
mov [rsp + 48], rax
mov rax, __temp_str_7
mov [rsp + 56], rax
mov rdi, [rsp + 56]
call printf
mov [rsp + 64], rax
mov rax, 10
mov [rsp+72], rax
mov rax, 20
mov [rsp+80], rax
mov rax, [rsp + 72]
mov rbx, [rsp + 80]
mul rbx
mov [rsp + 96], rax
mov rax, [rsp + 96]
mov [rsp+88], rax
mov rax, [rsp + 88]
mov rbx, [rsp + 72]
add rax, rbx
mov [rsp + 112], rax
mov rax, [rsp + 88]
mov rbx, [rsp + 112]
mul rbx
mov [rsp + 120], rax
mov rax, [rsp + 120]
mov [rsp+104], rax
mov rax, __temp_str_8
mov [rsp + 128], rax
mov rax, [rsp + 80]
mov rbx, [rsp + 72]
add rax, rbx
mov [rsp + 136], rax
mov rax, [rsp + 136]
mov rbx, [rsp + 72]
mul rbx
mov [rsp + 144], rax
mov rax, [rsp + 104]
mov rbx, [rsp + 144]
add rax, rbx
mov [rsp + 152], rax
mov rax, [rsp + 88]
mov rbx, [rsp + 152]
add rax, rbx
mov [rsp + 160], rax
mov rax, [rsp + 88]
mov rbx, [rsp + 160]
add rax, rbx
mov [rsp + 168], rax
mov rax, [rsp + 168]
mov [rsp + 176], rax
mov rdi, [rsp + 128]
mov rsi, [rsp + 176]
call printf
mov [rsp + 184], rax
mov rax, rsp
add rax, 88
mov rax, rax
mov [rsp+192], rax
mov rax, __temp_str_9
mov [rsp + 200], rax
mov rax, rsp
add rax, 72
mov rax, rax
mov [rsp + 208], rax
mov rdi, [rsp + 200]
mov rsi, [rsp + 208]
call printf
mov [rsp + 216], rax
mov rax, __temp_str_10
mov [rsp + 224], rax
mov rax, rsp
add rax, 72
mov rax, rax
mov rbx, 8
add rax, rbx
mov [rsp + 232], rax
mov rax, [rsp + 232]
mov rax, [rax]
mov rax, rax
mov [rsp + 240], rax
mov rdi, [rsp + 224]
mov rsi, [rsp + 240]
call printf
mov [rsp + 248], rax
mov rax, __temp_str_11
mov [rsp + 256], rax
mov rax, [rsp + 192]
mov [rsp + 264], rax
mov rdi, [rsp + 256]
mov rsi, [rsp + 264]
call printf
mov [rsp + 272], rax
mov rax, __temp_str_12
mov [rsp + 280], rax
mov rax, 123
mov [rsp + 288], rax
mov rdi, [rsp + 288]
call doub
mov [rsp + 296], rax
mov rax, 123
mov rbx, [rsp + 296]
mul rbx
mov [rsp + 304], rax
mov rax, [rsp + 304]
mov [rsp + 312], rax
mov rdi, [rsp + 312]
call doub
mov [rsp + 320], rax
mov rax, [rsp + 320]
mov rbx, 2
mul rbx
mov [rsp + 328], rax
mov rax, [rsp + 328]
mov [rsp + 336], rax
mov rdi, [rsp + 336]
call doub
mov [rsp + 344], rax
mov rax, [rsp + 344]
mov rbx, 10
add rax, rbx
mov [rsp + 352], rax
mov rax, [rsp + 352]
mov [rsp + 360], rax
mov rdi, [rsp + 280]
mov rsi, [rsp + 360]
call printf
mov [rsp + 368], rax
mov rax, __temp_str_13
mov [rsp + 376], rax
mov rax, 5
mov [rsp + 384], rax
mov rdi, [rsp + 384]
call fact
mov [rsp + 392], rax
mov rax, [rsp + 392]
mov [rsp + 400], rax
mov rdi, [rsp + 376]
mov rsi, [rsp + 400]
call printf
mov [rsp + 408], rax
mov rax, 0
cmp rax, 1
je __tmp_label_14
mov rax, __temp_str_14
mov [rsp + 416], rax
mov rdi, [rsp + 416]
call printf
mov [rsp + 424], rax
jmp __tmp_label_15
__tmp_label_14:
mov rax, __temp_str_15
mov [rsp + 416], rax
mov rdi, [rsp + 416]
call printf
mov [rsp + 424], rax
__tmp_label_15:
mov rax, 0
cmp rax, 1
je __tmp_label_16
mov rax, __temp_str_16
mov [rsp + 416], rax
mov rdi, [rsp + 416]
call printf
mov [rsp + 424], rax
jmp __tmp_label_17
__tmp_label_16:
mov rax, __temp_str_17
mov [rsp + 416], rax
mov rdi, [rsp + 416]
call printf
mov [rsp + 424], rax
__tmp_label_17:
mov rax, __temp_str_18
mov [rsp + 416], rax
mov rax, 5
mov rbx, 1
cmp rax, rbx
jne __tmp_label_18
mov rax, 0
jmp __tmp_label_19
__tmp_label_18:
mov rax, 1
__tmp_label_19:
mov [rsp + 424], rax
mov rax, [rsp + 424]
mov [rsp + 432], rax
mov rdi, [rsp + 416]
mov rsi, [rsp + 432]
call printf
mov [rsp + 440], rax
mov rax, __temp_str_19
mov [rsp + 448], rax
mov rax, 0
mov [rsp + 456], rax
mov rdi, [rsp + 456]
call fibo
mov [rsp + 464], rax
mov rax, [rsp + 464]
mov [rsp + 472], rax
mov rdi, [rsp + 448]
mov rsi, [rsp + 472]
call printf
mov [rsp + 480], rax
mov rax, __temp_str_20
mov [rsp + 488], rax
mov rax, 1
mov [rsp + 496], rax
mov rdi, [rsp + 496]
call fibo
mov [rsp + 504], rax
mov rax, [rsp + 504]
mov [rsp + 512], rax
mov rdi, [rsp + 488]
mov rsi, [rsp + 512]
call printf
mov [rsp + 520], rax
mov rax, __temp_str_21
mov [rsp + 528], rax
mov rax, 2
mov [rsp + 536], rax
mov rdi, [rsp + 536]
call fibo
mov [rsp + 544], rax
mov rax, [rsp + 544]
mov [rsp + 552], rax
mov rdi, [rsp + 528]
mov rsi, [rsp + 552]
call printf
mov [rsp + 560], rax
mov rax, __temp_str_22
mov [rsp + 568], rax
mov rax, 3
mov [rsp + 576], rax
mov rdi, [rsp + 576]
call fibo
mov [rsp + 584], rax
mov rax, [rsp + 584]
mov [rsp + 592], rax
mov rdi, [rsp + 568]
mov rsi, [rsp + 592]
call printf
mov [rsp + 600], rax
mov rax, __temp_str_23
mov [rsp + 608], rax
mov rax, 4
mov [rsp + 616], rax
mov rdi, [rsp + 616]
call fibo
mov [rsp + 624], rax
mov rax, [rsp + 624]
mov [rsp + 632], rax
mov rdi, [rsp + 608]
mov rsi, [rsp + 632]
call printf
mov [rsp + 640], rax
mov rax, __temp_str_24
mov [rsp + 648], rax
mov rax, 5
mov [rsp + 656], rax
mov rdi, [rsp + 656]
call fibo
mov [rsp + 664], rax
mov rax, [rsp + 664]
mov [rsp + 672], rax
mov rdi, [rsp + 648]
mov rsi, [rsp + 672]
call printf
mov [rsp + 680], rax
mov rax, __temp_str_25
mov [rsp + 688], rax
mov rax, 6
mov [rsp + 696], rax
mov rdi, [rsp + 696]
call fibo
mov [rsp + 704], rax
mov rax, [rsp + 704]
mov [rsp + 712], rax
mov rdi, [rsp + 688]
mov rsi, [rsp + 712]
call printf
mov [rsp + 720], rax
mov rax, __temp_str_26
mov [rsp + 728], rax
mov rax, 7
mov [rsp + 736], rax
mov rdi, [rsp + 736]
call fibo
mov [rsp + 744], rax
mov rax, [rsp + 744]
mov [rsp + 752], rax
mov rdi, [rsp + 728]
mov rsi, [rsp + 752]
call printf
mov [rsp + 760], rax
mov rax, __temp_str_27
mov [rsp + 768], rax
mov rax, 8
mov [rsp + 776], rax
mov rdi, [rsp + 776]
call fibo
mov [rsp + 784], rax
mov rax, [rsp + 784]
mov [rsp + 792], rax
mov rdi, [rsp + 768]
mov rsi, [rsp + 792]
call printf
mov [rsp + 800], rax
mov rax, 0
mov [rsp+808], rax
__tmp_label_20:
mov rax, [rsp + 808]
mov rbx, 20
cmp rax, rbx
jl __tmp_label_22
mov rax, 0
jmp __tmp_label_23
__tmp_label_22:
mov rax, 1
__tmp_label_23:
mov [rsp + 816], rax
mov rax, [rsp + 816]
cmp rax, 0
je __tmp_label_21
mov rax, __temp_str_28
mov [rsp + 824], rax
mov rax, [rsp + 808]
mov [rsp + 832], rax
mov rdi, [rsp + 832]
call fibo
mov [rsp + 840], rax
mov rax, [rsp + 840]
mov [rsp + 848], rax
mov rdi, [rsp + 824]
mov rsi, [rsp + 848]
call printf
mov [rsp + 856], rax
mov rax, [rsp + 808]
mov rbx, 1
add rax, rbx
mov [rsp + 824], rax
mov rax, [rsp + 824]
mov [rsp+808], rax
jmp __tmp_label_20
__tmp_label_21:
mov rax, __temp_str_29
mov [rsp + 808], rax
mov rdi, [rsp + 808]
call printf
mov [rsp + 816], rax
mov rax, __temp_str_30
mov [rsp + 824], rax
mov rax, 1
mov rbx, 1
cmp rax, 0
je __tmp_label_24
mov rax, rbx
jmp __tmp_label_25
__tmp_label_24:
mov rax, 0
__tmp_label_25:
mov [rsp + 832], rax
mov rax, 1
mov rbx, 1
cmp rax, 0
je __tmp_label_26
mov rax, rbx
jmp __tmp_label_27
__tmp_label_26:
mov rax, 0
__tmp_label_27:
mov [rsp + 840], rax
mov rax, [rsp + 832]
mov rbx, [rsp + 840]
cmp rax, 0
je __tmp_label_28
mov rax, rbx
jmp __tmp_label_29
__tmp_label_28:
mov rax, 0
__tmp_label_29:
mov [rsp + 848], rax
mov rax, [rsp + 848]
mov [rsp + 856], rax
mov rdi, [rsp + 824]
mov rsi, [rsp + 856]
call printf
mov [rsp + 864], rax
mov rsp, rbp
pop rbp
ret
extern exit
global _start
_start:
call main
mov rdi, 0
call exit
